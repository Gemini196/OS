==69232== Memcheck, a memory error detector
==69232== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==69232== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==69232== Command: /home/student/Desktop/OS/HW1/skeleton_smash/smash
==69232== Parent PID: 69228
==69232== 
==69232== Invalid read of size 1
==69232==    at 0x5488B30: __strcmp_sse2_unaligned (strcmp-sse2-unaligned.S:24)
==69232==    by 0x10DA45: QuitCommand::execute() (Commands.cpp:627)
==69232==    by 0x10F120: SmallShell::executeCommand(char const*) (Commands.cpp:916)
==69232==    by 0x1109A1: main (smash.cpp:51)
==69232==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==69232== 
==69232== 
==69232== Process terminating with default action of signal 11 (SIGSEGV)
==69232==  Access not within mapped region at address 0x0
==69232==    at 0x5488B30: __strcmp_sse2_unaligned (strcmp-sse2-unaligned.S:24)
==69232==    by 0x10DA45: QuitCommand::execute() (Commands.cpp:627)
==69232==    by 0x10F120: SmallShell::executeCommand(char const*) (Commands.cpp:916)
==69232==    by 0x1109A1: main (smash.cpp:51)
==69232==  If you believe this happened as a result of a stack
==69232==  overflow in your program's main thread (unlikely but
==69232==  possible), you can try to increase the size of the
==69232==  main thread stack using the --main-stacksize= flag.
==69232==  The main thread stack size used in this run was 8388608.
==69232== 
==69232== FILE DESCRIPTORS: 6 open at exit.
==69232== Open file descriptor 1: /home/student/Desktop/OS/HW1/skeleton_smash/tests/outputs/test_2020_chprompt.out
==69232==    at 0x54EF957: dup2 (syscall-template.S:78)
==69232==    by 0x1108F8: main (smash.cpp:41)
==69232== 
==69232== Open file descriptor 0:
==69232==    at 0x54EF957: dup2 (syscall-template.S:78)
==69232==    by 0x1108A6: main (smash.cpp:33)
==69232== 
==69232== Open file descriptor 5:
==69232==    at 0x54EF927: dup (syscall-template.S:78)
==69232==    by 0x110A67: __static_initialization_and_destruction_0(int, int) (smash.cpp:9)
==69232==    by 0x110A83: _GLOBAL__sub_I_stdout_dp (smash.cpp:57)
==69232==    by 0x110AFC: __libc_csu_init (in /home/student/Desktop/OS/HW1/skeleton_smash/smash)
==69232==    by 0x5400C17: (below main) (libc-start.c:266)
==69232== 
==69232== Open file descriptor 4: /home/student/Desktop/OS/HW1/skeleton_smash/tests/outputs/test_2020_chprompt.out
==69232==    at 0x54EF927: dup (syscall-template.S:78)
==69232==    by 0x110A57: __static_initialization_and_destruction_0(int, int) (smash.cpp:8)
==69232==    by 0x110A83: _GLOBAL__sub_I_stdout_dp (smash.cpp:57)
==69232==    by 0x110AFC: __libc_csu_init (in /home/student/Desktop/OS/HW1/skeleton_smash/smash)
==69232==    by 0x5400C17: (below main) (libc-start.c:266)
==69232== 
==69232== Open file descriptor 3: /home/student/Desktop/OS/HW1/skeleton_smash/tests/outputs/test_2020_chprompt.valgrind
==69232==    <inherited from parent>
==69232== 
==69232== Open file descriptor 2: /home/student/Desktop/OS/HW1/skeleton_smash/tests/outputs/test_2020_chprompt.err
==69232==    <inherited from parent>
==69232== 
==69232== 
==69232== HEAP SUMMARY:
==69232==     in use at exit: 706 bytes in 10 blocks
==69232==   total heap usage: 105 allocs, 95 frees, 87,814 bytes allocated
==69232== 
==69232== 5 bytes in 1 blocks are still reachable in loss record 1 of 10
==69232==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==69232==    by 0x10B299: _parseCommandLine(char const*, char**) (Commands.cpp:47)
==69232==    by 0x10DA28: QuitCommand::execute() (Commands.cpp:625)
==69232==    by 0x10F120: SmallShell::executeCommand(char const*) (Commands.cpp:916)
==69232==    by 0x1109A1: main (smash.cpp:51)
==69232== 
==69232== 16 bytes in 1 blocks are still reachable in loss record 2 of 10
==69232==    at 0x4C3217F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==69232==    by 0x110845: main (smash.cpp:24)
==69232== 
==69232== 24 bytes in 1 blocks are still reachable in loss record 3 of 10
==69232==    at 0x4C3217F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==69232==    by 0x10E0BD: JobsList::JobsList() (Commands.cpp:707)
==69232==    by 0x110850: main (smash.cpp:24)
==69232== 
==69232== 24 bytes in 1 blocks are still reachable in loss record 4 of 10
==69232==    at 0x4C3217F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==69232==    by 0x10EF5E: SmallShell::CreateCommand(char const*) (Commands.cpp:897)
==69232==    by 0x10F07A: SmallShell::executeCommand(char const*) (Commands.cpp:904)
==69232==    by 0x1109A1: main (smash.cpp:51)
==69232== 
==69232== 24 bytes in 1 blocks are indirectly lost in loss record 5 of 10
==69232==    at 0x4C3217F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==69232==    by 0x10E0BD: JobsList::JobsList() (Commands.cpp:707)
==69232==    by 0x10EB3C: SmallShell::SmallShell() (Commands.cpp:860)
==69232==    by 0x110752: SmallShell::getInstance() (Commands.h:233)
==69232==    by 0x110824: main (smash.cpp:21)
==69232== 
==69232== 37 bytes in 1 blocks are still reachable in loss record 6 of 10
==69232==    at 0x4C3217F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==69232==    by 0x4F62AC6: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==69232==    by 0x4F62E18: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==69232==    by 0x10F7EC: SmallShell::setName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (Commands.h:240)
==69232==    by 0x10CA61: ChpromptCommand::execute() (Commands.cpp:394)
==69232==    by 0x10F120: SmallShell::executeCommand(char const*) (Commands.cpp:916)
==69232==    by 0x1109A1: main (smash.cpp:51)
==69232== 
==69232== 40 (16 direct, 24 indirect) bytes in 1 blocks are definitely lost in loss record 7 of 10
==69232==    at 0x4C3217F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==69232==    by 0x10EB31: SmallShell::SmallShell() (Commands.cpp:860)
==69232==    by 0x110752: SmallShell::getInstance() (Commands.h:233)
==69232==    by 0x110824: main (smash.cpp:21)
==69232== 
==69232== 160 bytes in 1 blocks are still reachable in loss record 8 of 10
==69232==    at 0x4C3289F: operator new[](unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==69232==    by 0x10D9E0: QuitCommand::execute() (Commands.cpp:620)
==69232==    by 0x10F120: SmallShell::executeCommand(char const*) (Commands.cpp:916)
==69232==    by 0x1109A1: main (smash.cpp:51)
==69232== 
==69232== 200 bytes in 1 blocks are still reachable in loss record 9 of 10
==69232==    at 0x4C3289F: operator new[](unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==69232==    by 0x10EB4E: SmallShell::SmallShell() (Commands.cpp:861)
==69232==    by 0x110752: SmallShell::getInstance() (Commands.h:233)
==69232==    by 0x110824: main (smash.cpp:21)
==69232== 
==69232== 200 bytes in 1 blocks are still reachable in loss record 10 of 10
==69232==    at 0x4C3289F: operator new[](unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==69232==    by 0x10D9EE: QuitCommand::execute() (Commands.cpp:621)
==69232==    by 0x10F120: SmallShell::executeCommand(char const*) (Commands.cpp:916)
==69232==    by 0x1109A1: main (smash.cpp:51)
==69232== 
==69232== LEAK SUMMARY:
==69232==    definitely lost: 16 bytes in 1 blocks
==69232==    indirectly lost: 24 bytes in 1 blocks
==69232==      possibly lost: 0 bytes in 0 blocks
==69232==    still reachable: 666 bytes in 8 blocks
==69232==         suppressed: 0 bytes in 0 blocks
==69232== 
==69232== For counts of detected and suppressed errors, rerun with: -v
==69232== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
