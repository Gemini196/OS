==45626== Memcheck, a memory error detector
==45626== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==45626== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==45626== Command: /home/student/Desktop/OS/HW1/skeleton_smash/smash
==45626== Parent PID: 45622
==45626== 
==45626== Invalid read of size 1
==45626==    at 0x5488B30: __strcmp_sse2_unaligned (strcmp-sse2-unaligned.S:24)
==45626==    by 0x10DC7B: QuitCommand::execute() (Commands.cpp:639)
==45626==    by 0x10F690: SmallShell::executeCommand(char const*) (Commands.cpp:971)
==45626==    by 0x112D72: main (smash.cpp:51)
==45626==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==45626== 
==45626== 
==45626== Process terminating with default action of signal 11 (SIGSEGV)
==45626==  Access not within mapped region at address 0x0
==45626==    at 0x5488B30: __strcmp_sse2_unaligned (strcmp-sse2-unaligned.S:24)
==45626==    by 0x10DC7B: QuitCommand::execute() (Commands.cpp:639)
==45626==    by 0x10F690: SmallShell::executeCommand(char const*) (Commands.cpp:971)
==45626==    by 0x112D72: main (smash.cpp:51)
==45626==  If you believe this happened as a result of a stack
==45626==  overflow in your program's main thread (unlikely but
==45626==  possible), you can try to increase the size of the
==45626==  main thread stack using the --main-stacksize= flag.
==45626==  The main thread stack size used in this run was 8388608.
==45626== 
==45626== FILE DESCRIPTORS: 6 open at exit.
==45626== Open file descriptor 1: /home/student/Desktop/OS/HW1/skeleton_smash/tests/outputs/test_jobs.out
==45626==    at 0x54EF957: dup2 (syscall-template.S:78)
==45626==    by 0x112CC9: main (smash.cpp:41)
==45626== 
==45626== Open file descriptor 0:
==45626==    at 0x54EF957: dup2 (syscall-template.S:78)
==45626==    by 0x112C77: main (smash.cpp:33)
==45626== 
==45626== Open file descriptor 5:
==45626==    at 0x54EF927: dup (syscall-template.S:78)
==45626==    by 0x112E17: __static_initialization_and_destruction_0(int, int) (smash.cpp:9)
==45626==    by 0x112E33: _GLOBAL__sub_I_stdout_dp (smash.cpp:57)
==45626==    by 0x112EAC: __libc_csu_init (in /home/student/Desktop/OS/HW1/skeleton_smash/smash)
==45626==    by 0x5400C17: (below main) (libc-start.c:266)
==45626== 
==45626== Open file descriptor 4: /home/student/Desktop/OS/HW1/skeleton_smash/tests/outputs/test_jobs.out
==45626==    at 0x54EF927: dup (syscall-template.S:78)
==45626==    by 0x112E07: __static_initialization_and_destruction_0(int, int) (smash.cpp:8)
==45626==    by 0x112E33: _GLOBAL__sub_I_stdout_dp (smash.cpp:57)
==45626==    by 0x112EAC: __libc_csu_init (in /home/student/Desktop/OS/HW1/skeleton_smash/smash)
==45626==    by 0x5400C17: (below main) (libc-start.c:266)
==45626== 
==45626== Open file descriptor 3: /home/student/Desktop/OS/HW1/skeleton_smash/tests/outputs/test_jobs.valgrind
==45626==    <inherited from parent>
==45626== 
==45626== Open file descriptor 2: /home/student/Desktop/OS/HW1/skeleton_smash/tests/outputs/test_jobs.err
==45626==    <inherited from parent>
==45626== 
==45626== 
==45626== HEAP SUMMARY:
==45626==     in use at exit: 797 bytes in 11 blocks
==45626==   total heap usage: 19 allocs, 8 frees, 82,165 bytes allocated
==45626== 
==45626== 5 bytes in 1 blocks are still reachable in loss record 1 of 9
==45626==    at 0x4C31B0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==45626==    by 0x10B5B9: _parseCommandLine(char const*, char**) (Commands.cpp:47)
==45626==    by 0x10DC5E: QuitCommand::execute() (Commands.cpp:637)
==45626==    by 0x10F690: SmallShell::executeCommand(char const*) (Commands.cpp:971)
==45626==    by 0x112D72: main (smash.cpp:51)
==45626== 
==45626== 24 bytes in 1 blocks are still reachable in loss record 2 of 9
==45626==    at 0x4C3217F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==45626==    by 0x10F049: SmallShell::SmallShell() (Commands.cpp:911)
==45626==    by 0x11255E: SmallShell::getInstance() (Commands.h:257)
==45626==    by 0x112C3C: main (smash.cpp:21)
==45626== 
==45626== 24 bytes in 1 blocks are still reachable in loss record 3 of 9
==45626==    at 0x4C3217F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==45626==    by 0x10E337: JobsList::JobsList() (Commands.cpp:725)
==45626==    by 0x10F054: SmallShell::SmallShell() (Commands.cpp:911)
==45626==    by 0x11255E: SmallShell::getInstance() (Commands.h:257)
==45626==    by 0x112C3C: main (smash.cpp:21)
==45626== 
==45626== 24 bytes in 1 blocks are still reachable in loss record 4 of 9
==45626==    at 0x4C3217F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==45626==    by 0x10F495: SmallShell::CreateCommand(char const*) (Commands.cpp:950)
==45626==    by 0x10F5EA: SmallShell::executeCommand(char const*) (Commands.cpp:959)
==45626==    by 0x112D72: main (smash.cpp:51)
==45626== 
==45626== 48 bytes in 2 blocks are still reachable in loss record 5 of 9
==45626==    at 0x4C3217F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==45626==    by 0x111DA6: __gnu_cxx::new_allocator<std::_List_node<JobsList::JobEntry*> >::allocate(unsigned long, void const*) (new_allocator.h:111)
==45626==    by 0x111B4C: std::allocator_traits<std::allocator<std::_List_node<JobsList::JobEntry*> > >::allocate(std::allocator<std::_List_node<JobsList::JobEntry*> >&, unsigned long) (alloc_traits.h:436)
==45626==    by 0x1116EC: std::__cxx11::_List_base<JobsList::JobEntry*, std::allocator<JobsList::JobEntry*> >::_M_get_node() (stl_list.h:383)
==45626==    by 0x110FF1: std::_List_node<JobsList::JobEntry*>* std::__cxx11::list<JobsList::JobEntry*, std::allocator<JobsList::JobEntry*> >::_M_create_node<JobsList::JobEntry* const&>(JobsList::JobEntry* const&) (stl_list.h:572)
==45626==    by 0x110BDF: void std::__cxx11::list<JobsList::JobEntry*, std::allocator<JobsList::JobEntry*> >::_M_insert<JobsList::JobEntry* const&>(std::_List_iterator<JobsList::JobEntry*>, JobsList::JobEntry* const&) (stl_list.h:1801)
==45626==    by 0x1107B9: std::__cxx11::list<JobsList::JobEntry*, std::allocator<JobsList::JobEntry*> >::push_back(JobsList::JobEntry* const&) (stl_list.h:1118)
==45626==    by 0x10E463: JobsList::addJob(char const*, int, long, bool) (Commands.cpp:741)
==45626==    by 0x10BD22: ExternalCommand::execute() (Commands.cpp:162)
==45626==    by 0x10F690: SmallShell::executeCommand(char const*) (Commands.cpp:971)
==45626==    by 0x112D72: main (smash.cpp:51)
==45626== 
==45626== 112 bytes in 2 blocks are still reachable in loss record 6 of 9
==45626==    at 0x4C3217F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==45626==    by 0x10E40F: JobsList::addJob(char const*, int, long, bool) (Commands.cpp:739)
==45626==    by 0x10BD22: ExternalCommand::execute() (Commands.cpp:162)
==45626==    by 0x10F690: SmallShell::executeCommand(char const*) (Commands.cpp:971)
==45626==    by 0x112D72: main (smash.cpp:51)
==45626== 
==45626== 160 bytes in 1 blocks are still reachable in loss record 7 of 9
==45626==    at 0x4C3289F: operator new[](unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==45626==    by 0x10DC16: QuitCommand::execute() (Commands.cpp:632)
==45626==    by 0x10F690: SmallShell::executeCommand(char const*) (Commands.cpp:971)
==45626==    by 0x112D72: main (smash.cpp:51)
==45626== 
==45626== 200 bytes in 1 blocks are still reachable in loss record 8 of 9
==45626==    at 0x4C3289F: operator new[](unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==45626==    by 0x10F066: SmallShell::SmallShell() (Commands.cpp:912)
==45626==    by 0x11255E: SmallShell::getInstance() (Commands.h:257)
==45626==    by 0x112C3C: main (smash.cpp:21)
==45626== 
==45626== 200 bytes in 1 blocks are still reachable in loss record 9 of 9
==45626==    at 0x4C3289F: operator new[](unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==45626==    by 0x10DC24: QuitCommand::execute() (Commands.cpp:633)
==45626==    by 0x10F690: SmallShell::executeCommand(char const*) (Commands.cpp:971)
==45626==    by 0x112D72: main (smash.cpp:51)
==45626== 
==45626== LEAK SUMMARY:
==45626==    definitely lost: 0 bytes in 0 blocks
==45626==    indirectly lost: 0 bytes in 0 blocks
==45626==      possibly lost: 0 bytes in 0 blocks
==45626==    still reachable: 797 bytes in 11 blocks
==45626==         suppressed: 0 bytes in 0 blocks
==45626== 
==45626== For counts of detected and suppressed errors, rerun with: -v
==45626== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
